hbiApp.controller('checkoutController', ['$scope','$http','$state','$rootScope','$location','paymentService','headerService','checkoutService','productlistService', function($scope, $http, $state,$rootScope,$location,paymentService,headerService,checkoutService, productlistService) {
	
	
	$scope.init = function(){
		//getDeliveryOptions();
	}
	
	$scope.emailFlag=true;
	$scope.btn_text="Enter email address";

	$scope.validate=function(){
		//console.log($scope.emailAddress);
		if($scope.deliverydetails.email.length>0){
			$scope.emailFlag=false;
			$scope.btn_text="Continue";
		}
	}
	
	$scope.openWindow=function(){
		$("#js-welcome-guest").removeClass("hidden");
		$("#js-welcome-email-submit").addClass("hidden");
	}
	
	$scope.changeSection=function(value){
		if(value==="Yes"){
			$("#js-welcome-create-account").removeClass("hidden");
			$("#IAgree").removeClass("hidden");
			$("#js-welcome-create-account-submit").removeClass("hidden");
			$("#js-welcome-guest-submit").addClass("hidden");
		}else if(value==="No"){
			$("#js-welcome-create-account").addClass("hidden");
			$("#IAgree").addClass("hidden");
			$("#js-welcome-create-account-submit").addClass("hidden");			
			$("#js-welcome-guest-submit").removeClass("hidden");
		}
	}
	
	$scope.continueAsGuest=function(){
		$("#welcome").toggleClass("completed");	
		if($("#welcome").hasClass("completed")){			
			$("#deliveryContent").removeClass("hidden");
		}else if(!($("#welcome").hasClass("completed"))){
			$("#delivery").addClass("completed");
		}			
	}
	
	$scope.toggleDelivery=function(){
		if($("#delivery").hasClass("completed")){			
			$("#welcome").addClass("completed");
			$("#delivery").removeClass("completed");
			$("#collectionMethod").addClass("hidden");
			$("#deliveryMethod").addClass("hidden");
		}else if(!($("#welcome").hasClass("completed"))){
			$("#welcome").removeClass("completed");
			$("#delivery").addClass("completed");
		}
	}
	
	$scope.setDelivery=function(shipmentMode){
		
		if(shipmentMode == "Delivery"){
			$("#collectionMethod").addClass("hidden");
			$("#deliveryMethod").removeClass("hidden");
			//$scope.showAddressSection = true;
			/*
			var cart = headerService.sessionGet('cart');
			var shipmentData = {};
			shipmentData.version = cart.version;
			shipmentData.actions = [{"action":"setShippingMethod","shippingMethod":{"typeId":"shipping-method","id":"bca1b075-1207-4e67-ba95-4b66810b7c7a"}}];
			checkoutService.setShipment(cart.id, shipmentData).then(function(response) {
				
			});
			*/
		}
	}
	
	$scope.pincode=true;
	$scope.checkPincode=function(){
		if($scope.postCodeValue!=="" ||$scope.postCodeValue!==null || $scope.postCodeValue!==undefined){
			$scope.pincode=false;
		}else{
			$scope.pincode=true;
		}
	}
	//$scope.deliveryChooseButton=true;
	$scope.deliveryMessage="Enter delivery details";
	$scope.findAddress=function(){
		$("#addressDetails").removeClass("hidden");
	}
 
	$scope.showAddressInfo=function(){
		$("#AddressInfo").removeClass("hidden");
		$("#phoneNumber").removeClass("hidden");
	}
	
	$scope.checkPhone=function(){
		if($scope.phoneNumberValue!=="" ||$scope.phoneNumberValue!==null || $scope.phoneNumberValue!==undefined){
			$scope.deliveryChooseButton=false;
			$scope.deliveryMessage="Choose Delivery";
		}else{
			$scope.deliveryChooseButton=true;
			$scope.deliveryMessage="Enter delivery details";			
		}
	}
	
	$scope.saveAddressnProceed=function(data){
		var cart = headerService.sessionGet('cart');
		var shipmentData = {};
		var addressJson = {};
		var customerJson = {};
		var billingAddresJson = {};
		var countryJson = {};
		var shipmentMethodJson = {};
		shipmentData.version = cart.version;
		shipmentData.actions = [];
		
		addressJson.action = "setShippingAddress";
		addressJson.address = $scope.deliverydetails;
		shipmentData.actions.push(addressJson);
		
		customerJson.action = "setCustomerEmail";
		customerJson.email = $scope.deliverydetails.email;
		shipmentData.actions.push(customerJson);
		
		billingAddresJson.action = "setBillingAddress";
		shipmentData.actions.push(billingAddresJson);
		
		shipmentMethodJson.action = "setShippingMethod";
		shipmentMethodJson.shippingMethod = {};
		shipmentMethodJson.shippingMethod.typeId = "shipping-method";
		shipmentMethodJson.shippingMethod.id = "bca1b075-1207-4e67-ba95-4b66810b7c7a";
		shipmentData.actions.push(shipmentMethodJson);
		
		countryJson.action = "setCountry";
		countryJson.email = "GB";
		shipmentData.actions.push(countryJson);	
		productlistService.cartActions(cart, shipmentData).then(function(response) { 
			cart.id = response.data.id;
			cart.version = response.data.version;
			headerService.sessionSet('cart', cart);
			$scope.cartSaveData = response;
			if(data==="continueToPayment"){
				$("#continueToPayment").removeClass("hidden");
				$("#addressSection").addClass("hidden");
			}else{
				$("#continueToPayment").addClass("hidden");
				$("#addressSection").removeClass("hidden");
			}
		});
	}
	
	$scope.goToBilling=function(data){
		var cartData = headerService.sessionGet('cart');
		var paymentData = {
			  "amountPlanned": {
				"currencyCode": cartData.totalPrice.currencyCode,
				"centAmount":cartData.totalPrice.centAmount
			  }
			};
		checkoutService.createPayment(paymentData).then(function(response){
			headerService.sessionSet('paymentData',{"id":response.data.id});
			if(data==="billing"){
			$("#delivery").removeClass("completed");
			$("#billing").addClass("completed");
			}else if(data==="Delivery"){
				$("#delivery").addClass("completed");
				$("#billing").removeClass("completed");
			}
			var paymentObj = {};
			paymentObj.version = cartData.version;
			paymentObj.actions = [];
			
			paymentSubObj = {};
			paymentSubObj.action = "addPayment";
			paymentSubObj.payment = {};
			paymentSubObj.payment.id = response.data.id;
			paymentSubObj.payment.typeId = "payment";
			paymentObj.actions.push(paymentSubObj); 
			
			checkoutService.addPayment(cartData.id,paymentObj).then(function(response){
				headerService.sessionSet('cart',response.data);
				var placeOrderObj = {};
				placeOrderObj.id = response.data.id;
				placeOrderObj.version = response.data.version;
				var orderId = new Date().getTime().toString();
				placeOrderObj.orderNumber = orderId;
				placeOrderObj.paymentState = "Paid";
				checkoutService.placeOrder(placeOrderObj).then(function(response){
					headerService.removeItem('cart');
					headerService.sessionSet('orderId',orderId);
					$state.go('thankyou');
				});
			});
		});	
		
	}
	
	$scope.goToPayment = function(){
		console.log("Goto payment");
		//var paymentSession = $scope.createPaymentSession();
		var sdkConfigObj = {
			context : 'test', 
			useDefaultCSS  : 'false'// change it to 'live' when going live.
	  	};
	  var paymentSession = '';
	  // Initiate the Checkout form.
	  var checkout = chckt.checkout(paymentSession, '#your-payment-div', sdkConfigObj);
	  console.log("checkout",checkout); 
	  
	}

	chckt.hooks.beforeComplete = function(node, paymentData) {
		console.log('Payment Succesfull', paymentData);
		if(paymentData.resultCode == "authorised"){
			$location.path( "/home" );
		}
		return true; // Indicates that you want to replace the default handling.
	 };

	 $scope.createPaymentSession = function(){
		var payementdata = { 
			"amount": { 
			   "currency": "GBP", 
			   "value": "12025"
			}, 
			"reference": "HNBOrder001",
			"merchantAccount": "HnBECommTest",
			"sdkVersion": "1.3.2",
			"shopperReference": "yourShopperId_IOfW3k9G2PvXFu2j",
			"channel": "Web",
			"html": true,
			"origin": "https://hnbfour.herokuapp.com/",
			"returnUrl": "https://hnbfour.herokuapp.com/!#/checkout", 
			"countryCode": "GB",
			"shopperLocale": "en_GB"
		 };
		 return paymentService.getPaymentSession(payementdata);
	 
	 }
	 
	 function getDeliveryOptions(){ 
		var cart = headerService.sessionGet('cart');
		checkoutService.getDeliveryOptions(cart.id).then(function(response) {
			console.log(response);
		});
	 }
}]);

